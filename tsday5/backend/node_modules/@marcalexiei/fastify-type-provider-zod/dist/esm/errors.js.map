{"version":3,"file":"errors.js","sources":["../../src/errors.ts"],"sourcesContent":["import createError, { type FastifyErrorConstructor } from '@fastify/error';\nimport type { FastifyError } from 'fastify';\n// When https://github.com/fastify/fastify/pull/6207 is released when can import from fastify\nimport type { FastifySchemaValidationError } from 'fastify/types/schema.js';\nimport type { $ZodError } from 'zod/v4/core';\n\nexport const InvalidSchemaError: FastifyErrorConstructor<\n  { code: string },\n  [string]\n> = createError<[string]>(\n  'FST_ERR_INVALID_SCHEMA',\n  'Invalid schema passed: %s',\n  500,\n);\n\nconst ZodFastifySchemaValidationErrorSymbol: symbol = Symbol.for(\n  'ZodFastifySchemaValidationError',\n);\n\nexport type ZodFastifySchemaValidationError = FastifySchemaValidationError & {\n  [ZodFastifySchemaValidationErrorSymbol]: true;\n};\n\nconst ResponseSerializationBase: FastifyErrorConstructor<\n  {\n    code: string;\n  },\n  [\n    {\n      cause: $ZodError;\n    },\n  ]\n> = createError<[{ cause: $ZodError }]>(\n  'FST_ERR_RESPONSE_SERIALIZATION',\n  \"Response doesn't match the schema\",\n  500,\n);\n\nexport class ResponseSerializationError extends ResponseSerializationBase {\n  public method: string;\n  public url: string;\n  public override cause: $ZodError;\n\n  public constructor(\n    method: string,\n    url: string,\n    options: { cause: $ZodError },\n  ) {\n    super({ cause: options.cause });\n\n    this.method = method;\n    this.url = url;\n    this.cause = options.cause;\n  }\n}\n\nexport function isResponseSerializationError(\n  value: unknown,\n): value is ResponseSerializationError {\n  return 'method' in (value as ResponseSerializationError);\n}\n\nfunction isZodFastifySchemaValidationError(\n  error: unknown,\n): error is ZodFastifySchemaValidationError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    (error as ZodFastifySchemaValidationError)[\n      ZodFastifySchemaValidationErrorSymbol\n    ] === true\n  );\n}\n\nexport function hasZodFastifySchemaValidationErrors(\n  error: unknown,\n): error is Omit<FastifyError, 'validation'> & {\n  validation: Array<ZodFastifySchemaValidationError>;\n} {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'validation' in error &&\n    Array.isArray(error.validation) &&\n    error.validation.length > 0 &&\n    isZodFastifySchemaValidationError(error.validation[0])\n  );\n}\n\nfunction omit<T extends object, K extends keyof T>(\n  obj: T,\n  keys: ReadonlyArray<K>,\n): Omit<T, K> {\n  const result = {} as Omit<T, K>;\n  for (const key of Object.keys(obj) as Array<keyof T>) {\n    if (!keys.includes(key as K)) {\n      // @ts-expect-error\n      result[key] = obj[key];\n    }\n  }\n  return result;\n}\n\nexport function createValidationError(\n  error: $ZodError,\n): Array<ZodFastifySchemaValidationError> {\n  return error.issues.map((issue) => {\n    return {\n      [ZodFastifySchemaValidationErrorSymbol]: true,\n      keyword: issue.code,\n      instancePath: `/${issue.path.join('/')}`,\n      schemaPath: `#/${issue.path.join('/')}/${issue.code}`,\n      message: issue.message,\n      params: {\n        ...omit(issue, ['path', 'code', 'message']),\n      },\n    };\n  });\n}\n"],"names":[],"mappings":";AAMO,MAAM,qBAGT;AAAA,EACF;AAAA,EACA;AAAA,EACA;AACF;AAEA,MAAM,wCAAgD,OAAO;AAAA,EAC3D;AACF;AAMA,MAAM,4BASF;AAAA,EACF;AAAA,EACA;AAAA,EACA;AACF;AAEO,MAAM,mCAAmC,0BAA0B;AAAA,EACjE;AAAA,EACA;AAAA,EACS;AAAA,EAET,YACL,QACA,KACA,SACA;AACA,UAAM,EAAE,OAAO,QAAQ,MAAA,CAAO;AAE9B,SAAK,SAAS;AACd,SAAK,MAAM;AACX,SAAK,QAAQ,QAAQ;AAAA,EACvB;AACF;AAEO,SAAS,6BACd,OACqC;AACrC,SAAO,YAAa;AACtB;AAEA,SAAS,kCACP,OAC0C;AAC1C,SACE,OAAO,UAAU,YACjB,UAAU,QACT,MACC,qCACF,MAAM;AAEV;AAEO,SAAS,oCACd,OAGA;AACA,SACE,OAAO,UAAU,YACjB,UAAU,QACV,gBAAgB,SAChB,MAAM,QAAQ,MAAM,UAAU,KAC9B,MAAM,WAAW,SAAS,KAC1B,kCAAkC,MAAM,WAAW,CAAC,CAAC;AAEzD;AAEA,SAAS,KACP,KACA,MACY;AACZ,QAAM,SAAS,CAAA;AACf,aAAW,OAAO,OAAO,KAAK,GAAG,GAAqB;AACpD,QAAI,CAAC,KAAK,SAAS,GAAQ,GAAG;AAE5B,aAAO,GAAG,IAAI,IAAI,GAAG;AAAA,IACvB;AAAA,EACF;AACA,SAAO;AACT;AAEO,SAAS,sBACd,OACwC;AACxC,SAAO,MAAM,OAAO,IAAI,CAAC,UAAU;AACjC,WAAO;AAAA,MACL,CAAC,qCAAqC,GAAG;AAAA,MACzC,SAAS,MAAM;AAAA,MACf,cAAc,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,MACtC,YAAY,KAAK,MAAM,KAAK,KAAK,GAAG,CAAC,IAAI,MAAM,IAAI;AAAA,MACnD,SAAS,MAAM;AAAA,MACf,QAAQ;AAAA,QACN,GAAG,KAAK,OAAO,CAAC,QAAQ,QAAQ,SAAS,CAAC;AAAA,MAAA;AAAA,IAC5C;AAAA,EAEJ,CAAC;AACH;"}